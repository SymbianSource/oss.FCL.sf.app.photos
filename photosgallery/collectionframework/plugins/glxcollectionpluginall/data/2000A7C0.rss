/*
* Copyright (c) 2000 Nokia Corporation and/or its subsidiary(-ies). 
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:    Resource definitions 
*
*/




/**
 * @internal reviewed 13/06/2007 by Alex Birkett
 * @internal reviewed 24/07/2007 by K Hoikka, SCO 403-8472 removal of all view
 */

/**
 * @bug:minor:abirkett:13/06/2007: Missing author.
 */

#include <ecom/registryinfo.rh>
#include "glxcollectionpluginall.hrh"
#include <photos.loc>
#include <glxcollectionplugintype.hrh>
#include <glxcollectionpluginpriority.hrh>              //Uid of the plugine for priority in opaque-data
#include <bldvariant.hrh>       // for v8.0 feature flags

/**
 * Bug Fix @ ESLM-7VWF28 :: In case the "ALL" Collection should not be shown in the Photos Matrix Menu View,
 * then Uncomment the following line inorder to define the Macro " GLX_NO_ALL_VIEW "
 */
//#define GLX_NO_ALL_VIEW

/**
 * The opaque_data syntax is made up of three parts: 
 * a list of Uids for resolving the view plugin, feature flags, priority.
 * 
 * <p>uid1;uid2;uid3</p>
 *  uid*: Supported plugin types.
 *  E.g. if podcast plugin may support music plugin as well, KMPXColPluginMusic
 *
 * <t>uid</t>
 *  uid: plugin type uid.
 *  E.g. for music plugin will be: 0x101FFCDA
 *
 * <f>flags</f> [optional]
 *  flags: sum of the required feature flags, not used now
 *
 * <i>priority</i> [optional]
 *  priority: a value of type TMPXCollectionPluginPriorities. This value determines
 *  the returning order when several plugins can support the same set of Uids. 
 *  Default value of this field is EMPXCollectionPluginPriorityNormal.
 */
RESOURCE REGISTRY_INFO theInfo
    {
    dll_uid = KGlxCollectionPluginAllDllUid;

    interfaces = 
        {
        INTERFACE_INFO
            {
            interface_uid = 0x101FFC36;
            implementations = 
                {
                IMPLEMENTATION_INFO
                    {
                    implementation_uid = KGlxCollectionPluginAllImplementationUid;
                    version_no = 1;
                    display_name = qtn_lgal_list_title_all;
                    default_data = "";
#ifdef GLX_NO_ALL_VIEW
                    opaque_data = "<i>"EGlxCollectionPluginAll"</i>"
                                  "<f>0x0001</f>";   // KMPXVpFeaturePreLoaded (yet to be defined) Keeps the plugin loaded
#else
// specify that this collection plugin should be shown in the main list view
                    opaque_data = "<t>"EGlxCollectionPluginShowInMainListView"</t>"
                                  "<i>"EGlxCollectionPluginAll"</i>"
                                  "<f>0x0001</f>";   // KMPXVpFeaturePreLoaded (yet to be defined) Keeps the plugin loaded
#endif                    
                    }
                };
            }
        };
    }
            



